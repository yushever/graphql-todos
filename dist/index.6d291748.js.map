{"mappings":"AAAA,MAAM,MAAM;AAEZ,MAAM,UAAU,SAAS,MAAM;AAC/B,MAAM,aAAa,SAAS,MAAM;AAClC,MAAM,QAAQ,SAAS,eAAe;AAEtC,QAAQ,iBAAiB,UAAU;AACnC,WAAW,iBAAiB,UAAU;AAEtC,MAAM,cAAc,CAAC;IACnB,OAAO,MAAM,KAAK;QAChB,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,UAAU;YAAE;QAAM;IAC/B,GAAG,KAAK,CAAC,MAAQ,IAAI;AACvB;AAEA,SAAS,UAAU,EAAE,KAAK,EAAE,YAAY,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE;IACjE,MAAM,KAAK,SAAS,cAAc;IAClC,GAAG,YAAY;IACf,GAAG,YAAY,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE,GAAG,SAAS,EAAE,KAAK,KAAK,IAAI,CAAC;IACrE,GAAG,aAAa,WAAW;IAE3B,MAAM,WAAW,SAAS,cAAc;IACxC,SAAS,OAAO;IAChB,IAAI,WACF,SAAS,aAAa,WAAW;IAEnC,SAAS,iBAAiB,UAAU;IACpC,GAAG,QAAQ;IAEX,MAAM,MAAM,SAAS,cAAc;IACnC,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,iBAAiB,SAAS;IAC9B,GAAG,OAAO;IAEV,MAAM,QAAQ;AAChB;AAEA,YAAY,CAAC;;;;;;;;;;;CAWZ,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,GAAK,KAAK,MAAM,KAAK,QAAQ,CAAC,OAAS,UAAU;AAEnE,eAAe,eAAe,CAAC;IAC7B,EAAE;IACF,IAAI,QAAQ,SAAS,OAAO;QAC1B,MAAM,eAAe,CAAC;gCACM,EAAE,QAAQ,SAAS,MAAM;;;;;KAKpD,CAAC;QAEF,MAAM,OAAO,MAAM,YAAY;QAC/B,UAAU,KAAK,KAAK;QACpB,QAAQ;IACV;AACF;AAEA,eAAe,UAAU,CAAC;IACxB,EAAE;IACF,MAAM,aAAa,WAAW,WAAW;IAEzC,IAAI,YAAY;QACd,MAAM,cAAc,CAAC;mCACU,EAAE,WAAW;;;;;;;;KAQ3C,CAAC;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,YAAY;QAEnC,MAAM,YAAY;QAClB,KAAK,MAAM,KAAK,QAAQ,CAAC,OAAS,UAAU;IAC9C;AACF;AAEA,eAAe;IACb,MAAM,SAAS,IAAI,CAAC,cAAc,QAAQ;IAE1C,MAAM,oBAAoB,CAAC;sBACP,EAAE,OAAO,sBAAsB,EAAE,IAAI,CAAC,QAAQ;;;GAGjE,CAAC;IAEF,MAAM,OAAO,MAAM,YAAY;IAC/B,IAAI,KAAK,KAAK,WAAW,WACvB,IAAI,CAAC,aAAa,WAAW;SAE7B,IAAI,CAAC,gBAAgB;AAEzB;AAEA,eAAe;IACb,MAAM,SAAS,IAAI,CAAC,cAAc,QAAQ;IAC1C,MAAM,cAAc,CAAC;sBACD,EAAE,OAAO;GAC5B,CAAC;IAEF,MAAM,OAAO,MAAM,YAAY;IAE/B,IAAI,KAAK,KAAK,YACZ,IAAI,CAAC,cAAc;AAEvB","sources":["projects/graphql-todos/src/app.js"],"sourcesContent":["const url = \"https://graphqlzero.almansi.me/api\";\r\n\r\nconst addForm = document.forms.addtask;\r\nconst searchForm = document.forms.findtask;\r\nconst todos = document.getElementById(\"todos\");\r\n\r\naddForm.addEventListener(\"submit\", addTaskHandler);\r\nsearchForm.addEventListener(\"submit\", findTodos);\r\n\r\nconst makeRequest = (query) => {\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nfunction printTodo({ title, completed = false, id = \"\", user = {} }) {\r\n  const li = document.createElement(\"li\");\r\n  li.className = \"list-group-item\";\r\n  li.innerHTML = `&nbsp; ${title} | ID: ${id} | by <b>${user.name}</b>`;\r\n  li.setAttribute(\"data-id\", id);\r\n\r\n  const checkbox = document.createElement(\"input\");\r\n  checkbox.type = \"checkbox\";\r\n  if (completed) {\r\n    checkbox.setAttribute(\"checked\", \"true\");\r\n  }\r\n  checkbox.addEventListener(\"change\", handleTodoStatus);\r\n  li.prepend(checkbox);\r\n\r\n  const del = document.createElement(\"button\");\r\n  del.className = \"btn btn-link mb-1\";\r\n  del.innerHTML = \"&times;\";\r\n  del.addEventListener(\"click\", handleDeleteTodo);\r\n  li.append(del);\r\n\r\n  todos.prepend(li);\r\n}\r\n\r\nmakeRequest(`query Todos {\r\n  todos{\r\n    data {\r\n      id\r\n      title\r\n      completed\r\n      user {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}`).then(({ data }) => data.todos.data.forEach((todo) => printTodo(todo)));\r\n\r\nasync function addTaskHandler(e) {\r\n  e.preventDefault();\r\n  if (addForm.taskname.value) {\r\n    const newTaskQuery = `mutation CreateTodo {\r\n      createTodo(input:{title: \"${addForm.taskname.value}\", completed: false}){\r\n        title\r\n        completed\r\n        id\r\n      }\r\n    }`;\r\n\r\n    const data = await makeRequest(newTaskQuery);\r\n    printTodo(data.data.createTodo);\r\n    addForm.reset();\r\n  }\r\n}\r\n\r\nasync function findTodos(e) {\r\n  e.preventDefault();\r\n  const searchText = searchForm.searchname.value;\r\n\r\n  if (searchText) {\r\n    const searchQuery = `query searchQuery{\r\n        todos(options:{search:{q: \"${searchText}\"}, sort:{field: \"id\", order: ASC}}){\r\n            data {\r\n              id\r\n              title\r\n              completed\r\n              user { name }\r\n            }\r\n          }\r\n    }`;\r\n    const { data } = await makeRequest(searchQuery);\r\n\r\n    todos.innerHTML = \"\";\r\n    data.todos.data.forEach((todo) => printTodo(todo));\r\n  }\r\n}\r\n\r\nasync function handleTodoStatus() {\r\n  const todoId = this.parentElement.dataset.id;\r\n\r\n  const changeStatusQuery = `mutation ChangeStatus {\r\n      updateTodo(id: \"${todoId}\", input: {completed: ${this.checked}}) {\r\n          completed\r\n      }\r\n  }`;\r\n\r\n  const data = await makeRequest(changeStatusQuery);\r\n  if (data.data.updateTodo.completed) {\r\n    this.setAttribute(\"checked\", \"true\");\r\n  } else {\r\n    this.removeAttribute(\"checked\");\r\n  }\r\n}\r\n\r\nasync function handleDeleteTodo() {\r\n  const todoId = this.parentElement.dataset.id;\r\n  const deleteQuery = `mutation DeleteTodo {\r\n      deleteTodo(id: \"${todoId}\")\r\n  }`;\r\n\r\n  const data = await makeRequest(deleteQuery);\r\n\r\n  if (data.data.deleteTodo) {\r\n    this.parentElement.remove();\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.6d291748.js.map","sourceRoot":"/__parcel_source_root/"}